% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean_parallel_compute.R
\name{mean_parallel_compute}
\alias{mean_parallel_compute}
\title{Call an Rcpp function within a doParallel call}
\usage{
mean_parallel_compute(
  n,
  mean = 0,
  sd = 1,
  n_sim = 1000,
  n_cores = parallel::detectCores()
)
}
\arguments{
\item{n}{Number of Observations}

\item{mean}{Center of Normal Distribution}

\item{sd}{Standard Deviation of Normal Distribution}

\item{n_sim}{Number of Simulations to Run}

\item{n_cores}{Number of CPU cores to use in parallelization task.}
}
\value{
A \code{vector} of length \code{n_sim} containing the mean for each distribution.
}
\description{
Constructs an example showing how to use \code{foreach}, \code{iterators}, and
\code{doParallel} to perform a parallel computation with a C++ function written
using Rcpp.
}
\details{
The \code{mean_parallel_compute()} function performs a bootstrap computation in
parallel of a mean value from the normal distribution.
}
\examples{
# Compute the mean on 1000 observations with 50 replications across
# 2 CPUs.
mean_parallel_compute(1000, n_sim = 50, n_cores = 2)
}
